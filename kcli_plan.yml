{{ image }}:
 type: image
 url: {{ image_url }}

{% if fake_network %}
{{ provisioning_net }}:
 type: network
 cidr: 172.24.0.0/24
 dhcp: False
 isolated: true
{% endif %}

{% if virtual_bootstrap %}
{{ cluster }}-bootstrap:
 pool: {{ pool }} 
 numcpus: {{ virtual_bootstrap_numcpus }}
 cloudinit: false
 start: false
 iso: {{ cluster }}-bootstrap.iso
 memory: {{ virtual_bootstrap_memory }}
 nets:
  - name: {{ provisioning_net }}
    mac: {{ virtual_bootstrap_mac }}
 disks:
{% for size in [disk_size] + extra_disks %}
  - {{ size }}
{% endfor %}
{% endif %}

{% if virtual_masters %}
{% for num in range(0, virtual_masters_number) %}
{{ cluster }}-master-{{ num }}:
 pool: {{ pool }}
 numcpus: {{ virtual_masters_numcpus }}
 cloudinit: false
 start: false
 iso: {{ cluster }}-master.iso
 memory: {{ virtual_masters_memory }}
 nets:
  - name: {{ provisioning_net }}
    mac: {{ virtual_masters_mac_prefix + ":" + "%02.d" | format(num + 1)| string }}
 disks:
{% for size in [disk_size] + extra_disks %}
  - {{ size }}
{% endfor %}
{% endfor %}
{% endif %}

{% if virtual_workers %}
{% for num in range(0, virtual_workers_number) %}
{{ cluster }}-worker-{{ num }}:
 pool: {{ pool }}
 numcpus: {{ virtual_workers_numcpus }}
 cloudinit: false
 start: false
 iso: {{ cluster }}-worker.iso
 memory: {{ virtual_workers_memory }}
 nets:
  - name: {{ provisioning_net }}
    mac: {{ virtual_workers_mac_prefix + ":" + "%02.d" | format(num + 1)| string }}
 disks:
{% for size in [disk_size] + extra_disks %}
  - {{ size }}
{% endfor %}
{% endfor %}
{% endif %}

{{ cluster }}-installer: 
 image: {{ image }} 
 playbook: {{ playbookÂ }}
 pool: {{ pool }} 
 numcpus: {{ numcpus }}
 wait: {{ installer_wait }}
 keys: {{ keys }}
{% if 'rhel' in image %}
 rhnregister: {{ rhnregister }}
{% endif %}
 networkwait: {{ networkwait }}
 memory: {{ memory }}
 privatekey: true
 notify: {{ notify }}
 notifyscript: {{ notifyscript }}
 nets:                                                                                                                                         
 - name: {{ baremetal_net }}
{% if baremetal_installer_ip != None and baremetal_installer_mask != None and baremetal_installer_gateway != None %}
   ip: {{ baremetal_installer_ip }}
   mask: {{ baremetal_installer_mask  }}
   gateway: {{ baremetal_installer_gateway }}
{% endif %}
 - name: {{ provisioning_net }}
   noconf: true
#   ip: {{ installer_ip|default(machine_cidr|network_ip(1)) }}
#   mask: {{ machine_cidr.split('/')[1] }}
#   vips:
#   - {{ api_ip|default(machine_cidr|network_ip(2)) }}
#   - {{ ingress_ip|default(machine_cidr|network_ip(3)) }}
 disks:
 - {{ disk_size }}
 files:
 - 01_patch_installconfig.sh
 - 02_packages.sh
 - 03_network.sh
 - 04_get_clients.sh
 - 05_disconnected.sh
 - 06_olm.sh
 - 07_nbde.sh
 - 08_ntp.sh
 - 09_nm.sh
 - 10_autorules.sh
 - 10_deploy_openshift_assets.sh
 - 11_create_big_isos.sh
 - 11_create_small_isos.sh
 - 12_launch_install.sh
 - 13_fix_disconnected_packages.sh
 - 14_deploy_operators.sh
 - ignition.template
 - path: /root/bin/small_iso.sh
   origin: helpers/create_small_iso.sh
 - path: /root/bin/racadm.sh
   origin: helpers/racadm.sh
 - path: /root/bin/sync_image.sh
   origin: helpers/sync_image.sh
 - path: /root/bin/clean.sh
   origin: helpers/clean.sh
 - path: /root/bin/mustgather.sh
   origin: helpers/mustgather.sh
 - path: /root/bin/contrail.sh
   origin: helpers/contrail.sh
 - install-config.yaml                                                                                                                           
 - .bashrc
 - iso.sh
 - iso.ign.template
 - create_iso_ignition.py
 - origin: {{ pullsecret }}
   path: /root/openshift_pull.json                                                                                                                    
 - path: /root/manifests
   origin: manifests
 - 99-openshift-tang-encryption-clevis.sample.yaml
 - 99-openshift-tang-encryption-ka.sample.yaml
 - 99-openshift-chrony.sample.yaml
 - 99-nm.sample.yaml
{% if network_type == 'Contrail' %}
 - 99-contrail-registries.sample.yaml
{% endif %}
 - 99-autorules-namespace.yaml
 - 99-autorules-configmap.yaml
 - 99-autorules-clusterrolebinding.yaml
 - 99-autorules-deployment.yaml
 - dnsmasq.conf
 - path: /opt/hosts
   origin: hosts
   mode: 755
 - haproxy.cfg
 - radvd.conf
 - path: /root/operators
   origin: operators
{% if not lab %}
 scripts:
 - deploy.sh
{% endif %}
